// 15.7 装饰者模式和代理模式

/**
 * 装饰器和代理模式的结构看起来非常相像，
 * 这两种模式都描述了怎样为对象提供一定程度上的间接引用，
 * 它们的实现部分都保留了对另外一个对象的引用，并且向那个对象发送请求
 * 
 * 区别在于意图和设计目的:
 * 代理模式(关系)
 *   目的
 *     当直接访问本体不方便或者不符合需求时，为这个本体提供一个替代者
 * 装饰者(一开始不能确定对象的全部功能)
 *   作用
 *     为对象动态实实在在加入行为
 */
